name: Build Scan and Push Docker Image

on:
  push:
    branches: [ "week-4" ]
  
  workflow_dispatch:

env:
  REPO: swaydevstan/nodejs-api

permissions:
  contents: read
  security-events: write

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Semantic versioning for Images
      id: versioning
      uses: PaulHatch/semantic-version@v4.0.2
      with:
        branch: week-4
        tag_prefix: "v"
        major_pattern: "MAJOR CHANGE:"
        minor_pattern: "feat:"
        format: "v${major}.${minor}.${patch}-${increment}"

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v6

    - name: Scan for Secrets and Credentials Leak
      uses: trufflesecurity/trufflehog@v3.10.1
      with:
        path: ./ 
        base: ${{ steps.branch-name.outputs.current_branch }}
        head: HEAD
        extra_args: --json

    - name: Run Static Code Analysis
    - uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   uses: codacy/codacy-analysis-cli-action@master
    #   with:
    #       output: static-analysis-results.sarif
    #       format: sarif
  
    # - name: Upload Static Code Analysis results
    #   if: always()
    #   uses: github/codeql-action/upload-sarif@main
    #   with:
    #     sarif_file: static-analysis-results.sarif

    # # Installs secret scanner on the runner
    # - name: Install Whispers
    #   run: sudo pip install whispers

    # # Scan repo for secrets
    # - name: Run scanner for the repository
    #   run: whispers ${{ github.workspace }} > /tmp/scan_output.json

    # # Upload Artifacts
    # - name: Upload the scan output
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: scan_results
    #     path: /tmp/scan_output.json
    #     retention-days: 2

    - name: Run Unit Tests
      run: echo "Application tests successful"
      
    
    - name: Build the Docker image
      run: docker build --file Dockerfile --tag ${{ env.REPO }}:${{ steps.versioning.outputs.version }} .

    - name: Run Trivy vulnerability scanner to scan image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.REPO }}:${{ steps.versioning.outputs.version }}'
        format: 'sarif'
        output: 'image-scan-results.sarif'
        severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'


    - name: Upload Trivy scan results to GitHub Security tab
      if: always() #
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'image-scan-results.sarif'

    - name: Log in to DockerHub    
      uses: docker/login-action@v2
      with:            
        username: ${{ secrets.DOCKER_USERNAME }}  
        password: ${{ secrets.DOCKER_PASSWORD }}
  
    - name: Push Image to Registry
      run: docker push ${{ env.REPO }}:${{ steps.versioning.outputs.version }}


